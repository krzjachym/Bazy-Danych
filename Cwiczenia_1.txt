--1.-----------------------------------------------------------------------------------------------------
CREATE DATABASE s290460;

--2.-----------------------------------------------------------------------------------------------------
CREATE SCHEMA firma;

--3.-----------------------------------------------------------------------------------------------------
CREATE ROLE ksiegowosc;
GRANT SELECT ON DATABASE::s290460 IN SCHEMA firma TO ksiegowosc;

--4.-----------------------------------------------------------------------------------------------------
CREATE TABLE pracownicy (
	id_pracownika int NOT NULL, 
	imie varchar(255),
	nazwisko varchar(255),
	adres varchar(255), 
	telefon varchar(255)
);

ALTER TABLE pracownicy
ADD CONSTRAINT PK_pracownicy PRIMARY KEY (id_pracownika);

CREATE INDEX ind_nazwisko
ON pracownicy(nazwisko);

CREATE TABLE godziny(
	id_godziny int NOT NULL,
	data DATE, 
	liczba_godzin int, 
	id_pracownika int
);

ALTER TABLE godziny
ADD CONSTRAINT PK_godziny PRIMARY KEY (id_godziny);

ALTER TABLE godziny
ADD CONSTRAINT FK_id_pracownika FOREIGN KEY (id_pracownika) REFERENCES pracownicy(id_pracownika);

	
CREATE TABLE pensja_stanowisko(
	id_pensji int NOT NULL,
	stanowisko varchar(255),
	kwota float
);

ALTER TABLE pensja_stanowisko
ADD CONSTRAINT PK_pensja PRIMARY KEY (id_pensji);

CREATE TABLE premia (
	id_premii int NOT NULL,
	rodzaj varchar(255),
	kwota float
);
	
ALTER TABLE premia
ADD CONSTRAINT PK_premia PRIMARY KEY (id_premii);

CREATE TABLE wynagrodzenie (
	id_wynagrodzenia int NOT NULL,
	data DATE,
	id_pracownika int,
	id_godziny int,
	id_pensji int,
	id_premii int 
);

ALTER TABLE wynagrodzenie
ADD CONSTRAINT PK_wynagrodzenie PRIMARY KEY (id_wynagrodzenia);

ALTER TABLE wynagrodzenie
ADD CONSTRAINT FK_id_pracownika FOREIGN KEY (id_pracownika) REFERENCES pracownicy(id_pracownika);

ALTER TABLE wynagrodzenie
ADD CONSTRAINT FK_id_godziny FOREIGN KEY (id_godziny) REFERENCES godziny(id_godziny);
	
ALTER TABLE wynagrodzenie
ADD CONSTRAINT FK_id_pensji FOREIGN KEY (id_pensji) REFERENCES pensja_stanowisko(id_pensji);

ALTER TABLE wynagrodzenie
ADD CONSTRAINT FK_id_premii FOREIGN KEY (id_premii) REFERENCES premia(id_premii);
	
	
	
COMMENT ON TABLE pracownicy IS 'pracownicy.';
COMMENT ON TABLE godziny IS 'godziny!';
COMMENT ON TABLE pensja_stanowisko is 'pensja stanowisko;';
COMMENT ON TABLE premia IS 'premia?';
COMMENT ON TABLE 	wynagrodzenie is 'wynagrodzenie...';
	
--5.----------------------------------------------------------------------------------------------------- 
ALTER TABLE godziny
ADD miesiac int;

ALTER TABLE godziny
ADD tydzien int;

ALTER TABLE wynagrodzenie
ALTER COLUMN data TYPE varchar(255);

INSERT INTO pracownicy
VALUES 
(1,'Adolfa','Ana','aaa 1a','111 111 111'),
(2,'Bartosz','B','bbb 2b', '222 222 222'),
(3,'CzesÅ‚aw','C','ccc 3c', '333 333 333'),
(4,'Dariusz', 'D','ddd 4d','444 444 444'),
(5,'Eryk','E','eee 5e','555 555 555'),
(6,'Franciszek','F','fff 6f', '666 666 666'),
(7,'Grzegorz', 'G', 'ggg 7g','777 777 777'),
(8,'Horacy','H','hhh 8h', '888 888 888'),
(9,'Ignacy', 'I', 'iii 9i','999 999 999'),
(10,'Janusz', 'J','jjj 10j','101 010 101');

INSERT INTO godziny
VALUES 
(1,'2019-07-04',8,1),
(2,'2010-06-04',8,1),
(3,'2020-07-06',7,2),
(4,'2019-01-03',3,3),
(5,'2018-10-12',12,4),
(6,'2019-07-04',10,5),
(7,'2020-03-04',2,6),
(8,'2021-04-04',5,7),
(9,'2001-07-04',9,8),
(10,'2100-02-04',9,10);


INSERT INTO pensja_stanowisko
VALUES 
(1,'kierownik',1111.11),
(2,'kierownik',2222.22),
(3,'kasjer',3333.33),
(4,'kasjer',4444.44),
(5,'kasjer',5555.55),
(6,'kasjer',6666.66),
(7,'kasjer',7777.77),
(8,'magazynier',8888.88),
(9,'magazynier',9999.99),
(10,'magazynier',10101.01);

INSERT INTO premia
VALUES 
(1,'k',111.11),
(2,'l',2222.22),
(3,'m',3333.33),
(4,'n',4444.44),
(5,'o',5555.55),
(6,'p',6666.66),
(7,'q',7777.77),
(8,'r',8888.88),
(9,'s',9999.99),
(10,'brak',0);

INSERT INTO wynagrodzenie
VALUES
(1,'2019-07-04',1,1,1),
(2,'2010-06-04',2,2,2),
(3,'2020-07-06',3,3,3),
(4,'2019-01-03',4,4,4),
(5,'2018-10-12',5,5,5),
(6,'2019-07-04',6,6,6),
(7,'2020-03-04',7,7,7),
(8,'2021-04-04',8,8,8),
(9,'2001-07-04',9,9,9),
(10,'2100-02-04',10,10,10);

--6.----------------------------------------------------------------------------------------------------- 
--a)
SELECT id, nazwisko FROM pracownicy;

--b)
SELECT p.id FROM pracownicy as p
JOIN wynagrodzenie AS w ON w.id_pracownika = p.id
JOIN pensja_stanowisko AS ps ON ps.id = w.id_pensji
JOIN premia AS pr ON pr.id = w.id_premii
WHERE pr.kwota + w.kwota > 1000;


--c)
SELECT id FROM pracownicy AS p
JOIN wynagrodzenie AS w ON w.id_pracownika = p.id
JOIN pensja_stanowisko AS ps ON ps.id = w.id_pensji
JOIN premia AS pr ON pr.id = w.id_premii
WHERE pr.rodzaj like 'brak' AND ps.kwota > 2000;


--d)
SELECT imie,nazwisko FROM pracownicy WHERE imie LIKE 'J%';

--e)
SELECT imie,nazwisko FROM pracownicy WHERE imie LIKE '%a' AND nazwisko LIKE '%n%';


--f)
SELECT p.imie,p.nazwisko,SUM(g.liczba_godzin)-160 FROM pracownicy AS p
JOIN godziny AS g ON g.id_pracownika = p.id;

--g)
SELECT imie,nazwisko FROM pracownicy AS p
JOIN wynagrodzenie AS w ON w.id_pracownika = p.id
JOIN pensja_stanowisko AS ps ON ps.id = w.id_pensji
WHERE ps.kwota > 1500 AND ps.kwota < 3000;

--h)
SELECT p.id FROM pracownicy as p
JOIN wynagrodzenie AS w ON w.id_pracownika = p.id
JOIN premia AS pr ON pr.id = w.id_premii
JOIN godziny AS g IN g.id_pracownika = p.id
WHERE godziny.liczba_godzin > 160 AND premia like 'brak';

--7.-----------------------------------------------------------------------------------------------------
--a)
SELECT imie,nazwisko FROM pracownicy AS p
JOIN wynagrodzenie AS w ON w.id_pracownika = p.id
JOIN pensja_stanowisko AS ps ON ps.id = w.id_pensji
ORDER BY ps.pensja ASC;

--b)
SELECT id FROM pracownicy AS p
JOIN wynagrodzenie AS w ON w.id_pracownika = p.id
JOIN pensja_stanowisko AS ps ON ps.id = w.id_pensji
JOIN premia AS pr ON pr.id = w.id_premii
ORDER BY ps.pensja,pr.kwota DESC;

--c)
SELECT ps.stanowisko, COUNT(p.id) FROM pracownicy AS p
JOIN wynagrodzenie AS w ON w.id_pracownika = p.id
JOIN pensja_stanowisko AS ps ON ps.id = w.id_pensji
JOIN premia AS pr ON pr.id = w.id_premii
GROUP BY ps.stanowisko;

--d)
SELECT AVG(ps.pensja),MAX(ps.pensja),MIN(ps.pensja) FROM pracownicy AS p
JOIN wynagrodzenie AS w ON w.id_pracownika = p.id
JOIN pensja_stanowisko AS ps ON ps.id = w.id_pensji
JOIN premia AS pr ON pr.id = w.id_premii
WHERE ps.stanowisko like 'kierownik';

--e)
SELECT SUM(ps.kwota + pr.kwota) FROM wynagrodzenie AS w
JOIN pensja_stanowisko AS ps ON ps.id = w.id_pensji
JOIN premia AS pr ON pr.id = w.id_premii;


--f)
SELECT ps.stanowisko, SUM(ps.kwota + pr.kwota) FROM wynagrodzenie AS w
JOIN pensja_stanowisko AS ps ON ps.id = w.id_pensji
JOIN premia AS pr ON pr.id = w.id_premii
GROUP BY ps.stanowisko;

--g)
SELECT ps.stanowisko, COUNT(p.id) FROM wynagrodzenie AS w
JOIN pensja_stanowisko AS ps ON ps.id = w.id_pensji
JOIN premia AS pr ON pr.id = w.id_premii
GROUP BY ps.stanowisko;
--h)
DELETE FROM pracownicy AS p 
JOIN wynagrodzenie AS w ON w.id_pracownika = p.id
JOIN pensja_stanowisko as PS ON ps.id = w.id_pensji
WHERE ps.kwota < 1200;

--8.
--a)
UPDATE pracownicy
SET telefon = CONCAT('(+48)' , telefon);

--b)
UPDATE pracownicy
 SET telefon = CONCAT(LEFT(telefon, 3), ' ', SUBSTRING(telefon, 4, 11));

--c)
SELECT UPPER(nazwisko) FROM PRACOWNICY ORDER BY LENGTH(nazwisko) DESC LIMIT 1;

--d)
SELECT MD5(CONCAT(pracownicy.id_pracownika, imie, nazwisko, adres, telefon, kwota)) FROM pracownicy 
JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika 
JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji;

--9.
SELECT CONCAT('Pracownik ', imie, ' ', nazwisko, ', w dniu ', godziny.data, ' otrzymal pensje calkowita na kwote ', (pensja_stanowisko.kwota + premia.kwota), ', gdzie wynagrodzenie zasadnicze wynosilo: ', pensja_stanowisko.kwota, ', premia:', premia.kwota, ', nadgodziny: ', (CASE WHEN godziny.liczba_godzin > 160 THEN 0 ELSE (160 - godziny.liczba_godzin) END)) FROM pracownicy AS pra
JOIN wynagrodzenie AS wyn ON wyn.id_pracownika = pra.id_pracownika 
JOIN godziny AS god ON god.id_godziny = wyn.id_godziny 
JOIN pensja_stanowisko AS ps ON wyn.id_pensji = ps.id_pensji 
JOIN premia AS pre ON pre.id_premii = wyn.id_premii;

